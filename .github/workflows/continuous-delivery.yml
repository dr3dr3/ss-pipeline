name: CONTINUOUS-DELIVERY

on:
  # Runs on pushes targeting the default branch
  repository_dispatch:
    types: [deploy]

jobs:

  get-build-artefacts:
    name: Get Build Artefacts
    outputs:
      target-revealmd: ${{ steps.revealmd.outputs.TARGET }}
      current-revealmd: ${{ steps.revealmd.outputs.CURRENT }}
      target-landing: ${{ steps.landing.outputs.TARGET }}
      current-landing: ${{ steps.landing.outputs.CURRENT }}
      check-links: ${{ steps.toggles.outputs.LINKS }}
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:

      - name: Checkout GitOps
        uses: actions/checkout@v3
        with:
          repository: 'dr3dr3/ss-gitops'
          ref: 'main'
          token: ${{ secrets.GHA_PAT }}

      - name: Output Toggles
        id: toggles
        run: |
          value="$(yq '.toggles.cicd.check-links.${{ github.event.client_payload.target-deploy }}' 'toggles.yml')" || 'ERROR'
          echo "LINKS=$value" >> $GITHUB_OUTPUT
          
      - name: Create directory
        run: mkdir _site

      ##### Solution: Landing

      - name: Landing Target Build
        id: landing
        run: |
          target="$(yq '.build.landing' 'builds.yml')" || 'ERROR'
          echo "TARGET=$target" >> $GITHUB_OUTPUT
          echo "Target = $target"
          current="$(yq '.deploy.${{ github.event.client_payload.target-deploy }}.landing' 'builds.yml')" || 'ERROR'
          echo "CURRENT=$current" >> $GITHUB_OUTPUT
          echo "Current = $current"
          repo="$(yq '.repositories.solutions.landing.ref' 'repositories.yml')" || 'ERROR'
          echo "REPO=$repo" >> $GITHUB_OUTPUT

      - name: Get Landing Pages Build Artefact
        run: |
          wget "https://github.com/${{ steps.landing.outputs.REPO }}/releases/download/${{ steps.landing.outputs.TARGET }}/build.tar.gz" -O landing.tar.gz
          mkdir landing
          tar -xzvf landing.tar.gz -C landing
          rsync -avh landing/_site/ _site

      ##### Solution: Reveal-MD

      - name: Reveal-MD Target Build
        id: revealmd
        run: |
          target="$(yq '.build.revealmd' 'builds.yml')" || 'ERROR'
          echo "TARGET=$target" >> $GITHUB_OUTPUT
          echo "Target = $target"
          current="$(yq '.deploy.${{ github.event.client_payload.target-deploy }}.revealmd' 'builds.yml')" || 'ERROR'
          echo "CURRENT=$current" >> $GITHUB_OUTPUT
          echo "Current = $current"
          repo="$(yq '.repositories.solutions.revealmd.ref' 'repositories.yml')" || 'ERROR'
          echo "REPO=$repo" >> $GITHUB_OUTPUT

      - name: Reveal-MD Build Artefact
        run: |
          wget "https://github.com/${{ steps.revealmd.outputs.REPO }}/releases/download/${{ steps.revealmd.outputs.TARGET }}/build.tar.gz" -O revealmd.tar.gz
          mkdir revealmd
          tar -xzvf revealmd.tar.gz -C revealmd
          rsync -avh revealmd/_site/ _site/revealmd

      - name: List Files
        run: |
          echo "$(cd _site && ls -R)" >> $GITHUB_STEP_SUMMARY

      ##### Set right SITE URL for the relevant environment

      - name: Update aboslute links for relevant environments
        run: |
          cd _site
          grep -rl localhost . | xargs sed -i 's@http://localhost@${{ github.event.client_payload.site_url }}@g'

      - name: Update links to feature flags
        run: |
          cd _site
          grep -rl datafile-tag-all.json . | xargs sed -i 's@datafiles/ci/datafile-tag-all.json@datafiles/${{ github.event.client_payload.target-deploy }}/datafile-tag-all.json@g'

      ##### Upload Deployable Artifact

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('{0}-{1}', 'RC', github.run_id ) }}
          path: _site
          retention-days: 1
  
  # Check links working in compiled deploy artefact
  check-links:
    name: Check Links
    needs: [get-build-artefacts]
    uses: ./.github/workflows/check-links.yml
    secrets: inherit
    with: 
      artefact-ref: ${{ format('{0}-{1}', 'RC', github.run_id ) }}
      toggle: ${{ needs.get-build-artefacts.outputs.check-links }}

  # Deploy to GitHub Page
  deploy-to-github-pages:
    name: Deploy GHP
    needs: [get-build-artefacts]
    uses: ./.github/workflows/deploy-github-pages.yml
    permissions:
      contents: read
      pages: write
      id-token: write
    secrets: inherit
    with:
      artefact-ref: ${{ format('{0}-{1}', 'RC', github.run_id ) }}

  ### Do different testing (smoke, PVT, etc)

  # Given successful testing then update the build for this environment in GitOps Config
  config-revealmd:
    name: Actual Build for Reveal-MD
    needs: [get-build-artefacts]
    if: needs.get-build-artefacts.outputs.current-revealmd != needs.get-build-artefacts.outputs.target-revealmd
    uses: ./.github/workflows/gitops-update.yml
    with:
      config-item: '.deploy.${{ github.event.client_payload.target-deploy }}.revealmd'
      config-value: ${{ needs.get-build-artefacts.outputs.target-revealmd }}
    secrets: inherit

  # Given successful testing then update the build for this environment in GitOps Config
  config-landing:
    name: Actual Build for Landing
    needs: [get-build-artefacts]
    if: needs.get-build-artefacts.outputs.current-landing != needs.get-build-artefacts.outputs.target-landing
    uses: ./.github/workflows/gitops-update.yml
    with:
      config-item: '.deploy.${{ github.event.client_payload.target-deploy }}.landing'
      config-value: ${{ needs.get-build-artefacts.outputs.target-landing }}
    secrets: inherit

  # Check all acceptance completed
  acceptance-complete:
    name: Acceptance 👍
    needs: [get-build-artefacts, check-links, deploy-to-github-pages, config-revealmd, config-landing] ### ADD ALL CHECKS
    if: always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest 
    steps:

      - name: Ready message
        run: echo "### Acceptance Completed :thumbsup:" >> $GITHUB_STEP_SUMMARY

  ifttt-success:
    name: IFTTT Success
    needs: [get-build-artefacts, check-links, deploy-to-github-pages, config-revealmd, config-landing] ### ADD ALL CHECKS
    if: always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    uses: ./.github/workflows/notification-ifttt.yml
    secrets: inherit
    with:
      phase: ${{ github.event.client_payload.target-deploy }}
      outcome: success

  acceptance-failed:
    name: Acceptance 👎
    needs: [get-build-artefacts, check-links, deploy-to-github-pages, config-revealmd, config-landing] ### ADD ALL CHECKS
    if: always() && ( contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') )
    runs-on: ubuntu-latest 
    steps:

      - name: Ready message
        run: echo "### Acceptance Failed :thumbsdown:" >> $GITHUB_STEP_SUMMARY

  ifttt-fail:
    name: IFTTT Fail
    needs: [get-build-artefacts, check-links, deploy-to-github-pages, config-revealmd, config-landing] ### ADD ALL CHECKS
    if: always() && ( contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') )
    uses: ./.github/workflows/notification-ifttt.yml
    secrets: inherit
    with:
      phase: ${{ github.event.client_payload.target-deploy }}
      outcome: fail

  ### Add dispatch for PRD (blue/green)