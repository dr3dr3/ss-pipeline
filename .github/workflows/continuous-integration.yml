name: CONTINUOUS-INTEGRATION

on:

  # Called from solution repo 
  workflow_call:
    inputs:
      feature:
        required: true
        type: string
      target-ref:
        required: true
        type: string

jobs:

  get-config:
    name: Get Configuration from GitOps repo
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      repo-revealmd: ${{ steps.setoutputs.outputs.REVEALMD }}
      repo-landing: ${{ steps.setoutputs.outputs.LANDING }}
      solution: ${{ steps.setoutputs.outputs.SOLN }}
    steps:

      - name: Checkout GitOps
        uses: actions/checkout@v3
        with:
          repository: 'dr3dr3/ss-gitops'
          ref: 'main'
          token: ${{ secrets.GHA_PAT }}

      ### Reveal-MD Solution

      - name: Config RMD
        id: setoutputs
        run: |
          rmd="$(yq '.repositories.solutions.revealmd' 'config.yml')" || 'ERROR'
          echo "REVEALMD=$rmd" >> $GITHUB_OUTPUT
          land="$(yq '.repositories.solutions.landing' 'config.yml')" || 'ERROR'
          echo "LANDING=$land" >> $GITHUB_OUTPUT
          echo "SOLN=$SOLUTION" >> $GITHUB_OUTPUT

  set-tag:
    name: 🔖 Set Tag
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.setoutput.outputs.TAG }}
    steps:
      
      - name: Output Tag
        id: setoutput
        run: |
          build="BUILD-$(date '+%Y.%m.%d.%H.%M')" || 'ERROR'
          echo "$build"
          echo "TAG=$build" >> $GITHUB_OUTPUT          

  ##### BUILD FOR EACH SOLUTION
  # BUILDS INCLUDE TESTING (Unit Testing, Mocked Integration Testing, etc)

  # Build static site using Reveal-MD
  build-revealmd:
    name: Reveal-MD Build
    needs: [get-config, set-tag]
    if: ${{ github.repository == needs.get-config.outputs.repo-revealmd }}
    uses: ./.github/workflows/build-revealmd.yml
    secrets: inherit
    with: 
      target-ref: ${{ inputs.target-ref }}
      artefact-ref: ${{ needs.set-tag.outputs.tag }}

  # Build static site using Reveal-MD
  build-landing:
    name: Landing Build
    needs: [get-config, set-tag]
    if: ${{ github.repository == needs.get-config.outputs.repo-landing }}
    uses: ./.github/workflows/build-revealmd.yml
    secrets: inherit
    with: 
      target-ref: ${{ inputs.target-ref }}
      artefact-ref: ${{ needs.set-tag.outputs.tag }}

  ##### Other solutions builds above

  # Check builds ok. Is a required check on the PR (setup in GitHub). 
  builds-complete:
    name: Builds 👍
    needs: [build-revealmd, build-landing] ### ADD MORE SS SOLUTIONS
    runs-on: ubuntu-latest 
    steps:

      - name: Ready message
        run: echo "### Builds Completed :thumbsup:" >> $GITHUB_STEP_SUMMARY

      - name: Send IFTTT message that build successful
        run: |
          curl -X POST -H 'Content-Type: application/json' https://maker.ifttt.com/trigger/gha_build_green/json/with/key/${{ secrets.IFTTT }}

    # Check builds ok. Is a required check on the PR (setup in GitHub). 
  builds-failed:
    name: Builds 👎
    needs: [build-revealmd, build-landing] 
    if: always() && (needs.build-revealmd.result == 'failure' || needs.build-landing.result == 'failure')
    runs-on: ubuntu-latest 
    steps:

      - name: Ready message
        run: echo "### Builds Failed :thumbsdown:" >> $GITHUB_STEP_SUMMARY

      - name: Send IFTTT message that build successful
        run: |
          curl -X POST -H 'Content-Type: application/json' https://maker.ifttt.com/trigger/gha_build_red/json/with/key/${{ secrets.IFTTT }}

  # Merge PR. GitHub setup to delete SLFB after merge completed.
  pr-merge: 
    name: PR Merge
    needs: [builds-complete]
    if: ${{ github.event_name == 'ON-PR-APPROVED' }}
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Feature Branch
        uses: actions/checkout@v3

      - name: Merge Pull Request
        run: gh pr merge ${{ inputs.slfb }} --squash --subject "${{ inputs.slfb }}" --body "Short-lived feature branch ${{ inputs.slfb }} automerged by GitHub Action" --auto
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: GitHub Step Summary
        run: echo "### PR Merge Success! :thumbsup:" >> $GITHUB_STEP_SUMMARY

  ## TAG RELEASE
  tag-release:
    name: 🔖
    needs: [set-tag, builds-complete]
    uses: ./.github/workflows/tag-release.yml
    with:
      tag: ${{ needs.set-tag.outputs.tag }}
      target-ref: ${{ inputs.target-ref }}
      feature: ${{ inputs.feature }}
    secrets: inherit

  # Set target build in GitOps config (to be used in continuous deployment)
  target-build-stg:
    name: Set Target Build in Config
    needs: [get-config, set-tag, builds-complete]
    uses: ./.github/workflows/gitops-update.yml
    with:
      config-item: '.deploy.${{ needs.get-config.outputs.solution }}.build.target'
      config-value: ${{ needs.set-tag.outputs.tag }}
    secrets: inherit

  # Deploy CI to GitHub Pages
  # Uses artefacts created by build jobs
  deploy-ci:
    name: Deploy CI
    needs: [set-tag, tag-release]
    uses: ./.github/workflows/deploy-github-pages.yml
    permissions:
      contents: write
      pages: write
      id-token: write
    with:
      artefact-ref: ${{ needs.set-tag.outputs.tag }}

  # Run CI Tests here

  ci-complete:
    name: CI Complete 👍
    needs: [tag-release, target-build-stg, deploy-ci] 
    runs-on: ubuntu-latest 
    steps:

      - name: Ready message
        run: echo "### Continuous Integration Completed :thumbsup:" >> $GITHUB_STEP_SUMMARY

      - name: Send IFTTT message that CI successful
        run: |
          curl -X POST -H 'Content-Type: application/json' https://maker.ifttt.com/trigger/gha_ci_green/json/with/key/${{ secrets.IFTTT }}

  ci-failed:
    name: CI Failed 👎
    needs: [tag-release, target-build-stg, deploy-ci] 
    if: always() && (needs.tag-release.result == 'failure' || needs.target-build-stg.result == 'failure' || needs.deploy-ci.result == 'failure')
    runs-on: ubuntu-latest 
    steps:

      - name: Ready message
        run: echo "### Continuous Integration Failed :thumbsdown:" >> $GITHUB_STEP_SUMMARY

      - name: Send IFTTT message that Ci failed
        run: |
          curl -X POST -H 'Content-Type: application/json' https://maker.ifttt.com/trigger/gha_ci_red/json/with/key/${{ secrets.IFTTT }}

  # Dispatch to Deploy to Stage Environment
  dispatch-stg:
    name: Dispatch STG
    needs: [ci-complete]
    uses: ./.github/workflows/deployment-dispatch.yml
    with:
      target-deploy: 'stg'
    secrets: inherit